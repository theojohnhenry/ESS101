clc, clear, clf
%our system

u = 5;
tf = 25;
x0 = 1;
y0 = 0;
deltat = 0.15; % STEP LENGTH (VARIABLE)

% xprim = f(t,X) 
f = @(t,X)[X(2);u*(1-X(1)^2)*X(2)-X(1)];

%default ode of vanderpol
options = odeset(); %default settings
[ode_t, ode_X] = ode45(f, [0 tf], [x0;y0], options);
scatter(ode_t, ode_X(:,1), 'filled', 'blue')
title('built in ode45 with default options');
xlabel('t')
ylabel('x ') 

%i observe a cyclical, sawtooth pattern ?

%vanderpol with tighter tolerances
figure;
options = odeset('AbsTol',1e-8,'RelTol',1e-8);
[ode_t, ode_X] = ode45(f, [0 tf], [x0;y0], options);
scatter(ode_t, ode_X(:,1), 'filled', 'green')
title('built in ode45 with lower tol');
xlabel('t')
ylabel('x ') 


%our ode for rk4

Xk = [x0;y0]; %seeding with start values
rk_X = Xk; 
rk_t = 0;

N = round(tf / deltat); % number of steps/iterations

for k=0:N-1

    t=k*deltat; %actual time 
    %rk method from p.166 in book
    k1 = f(k,Xk);
    k2 = f(k + (deltat/2), Xk + (deltat/2) * k1);
    k3 = f(k + (deltat/2), Xk + (deltat/2) * k2);
    k4 = f(k + deltat, Xk + deltat*k3);

    Xnext = Xk + deltat * ( ...
        (1/6 * k1) ...
        + (1/3 * k2) ...
        + (1/3 * k3) ...
        + (1/6 * k4) ...
    );
    Xk = Xnext;

    % store it
    rk_X = [rk_X, Xk];
    rk_t = [rk_t, t+deltat];

end

%plot our rk4 
figure;
scatter(rk_t, rk_X(1,:), 'red', 'filled');
xlim([0 tf])
xlabel('t');
ylabel('x');
title(['our rk4 with step length: ' num2str(deltat)]);

%notes.  
%We can see that we get an acceptable comparison
%with a stepsize as large as 0.15. If we try to go over
% that step size, the approximation completely
% breaks down to values of 2.4e32
% this is because apparently a vanderpol is a 
% stiff system with high u, which makes it unstable
% for big step sizes. So our rk4 doesnt "know" that
% the huge gradient on the flank of the sawtooth
% doesnt continue like that forever so it massively
